// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['underscore', 'Backbone', 'compiled/class/cache', 'compiled/views/SortableCollectionView', 'compiled/views/assignments/AssignmentGroupListItemView', 'jst/assignments/AssignmentGroupList', 'jst/assignments/NoAssignmentsListItem'], function(_, Backbone, Cache, SortableCollectionView, AssignmentGroupListItemView, template, NoAssignmentsListItem) {
    var AssignmentGroupListView;
    return AssignmentGroupListView = (function(_super) {

      __extends(AssignmentGroupListView, _super);

      function AssignmentGroupListView() {
        this.expand = __bind(this.expand, this);

        this.collapse = __bind(this.collapse, this);

        this.renderOnReset = __bind(this.renderOnReset, this);
        return AssignmentGroupListView.__super__.constructor.apply(this, arguments);
      }

      AssignmentGroupListView.optionProperty('course');

      AssignmentGroupListView.prototype.template = template;

      AssignmentGroupListView.prototype.itemView = AssignmentGroupListItemView;

      AssignmentGroupListView.optionProperty('assignment_sort_base_url');

      AssignmentGroupListView.prototype.initialize = function() {
        AssignmentGroupListView.__super__.initialize.apply(this, arguments);
        $.extend(true, this, Cache);
        return this.itemViewOptions = {
          course: this.course
        };
      };

      AssignmentGroupListView.prototype.render = function() {
        return AssignmentGroupListView.__super__.render.call(this, ENV.PERMISSIONS.manage);
      };

      AssignmentGroupListView.prototype.renderItem = function(model) {
        var view;
        view = AssignmentGroupListView.__super__.renderItem.apply(this, arguments);
        if (!model.groupView.isExpanded()) {
          model.groupView.toggle();
        }
        return view;
      };

      AssignmentGroupListView.prototype.createItemView = function(model) {
        var options;
        options = {
          parentCollection: this.collection,
          childKey: 'assignments',
          groupKey: 'assignment_group_id',
          groupId: model.id,
          reorderURL: this.createReorderURL(model.id),
          noItemTemplate: NoAssignmentsListItem
        };
        return new this.itemView($.extend({}, this.itemViewOptions || {}, {
          model: model
        }, options));
      };

      AssignmentGroupListView.prototype.createReorderURL = function(id) {
        return this.assignment_sort_base_url + "/" + id + "/reorder";
      };

      AssignmentGroupListView.prototype.renderOnReset = function() {
        this.firstResetLanded = true;
        return AssignmentGroupListView.__super__.renderOnReset.apply(this, arguments);
      };

      AssignmentGroupListView.prototype.toJSON = function() {
        var data;
        data = AssignmentGroupListView.__super__.toJSON.apply(this, arguments);
        return _.extend({}, data, {
          firstResetLanded: !this.empty
        });
      };

      AssignmentGroupListView.prototype.expandAll = function() {
        var m, _i, _len, _ref, _results;
        _ref = this.collection.models;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          m = _ref[_i];
          if (!m.groupView.isExpanded()) {
            _results.push(m.groupView.toggle());
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      };

      AssignmentGroupListView.prototype._initSort = function() {
        AssignmentGroupListView.__super__._initSort.apply(this, arguments);
        this.$list.on('sortstart', this.collapse);
        return this.$list.on('sortstop', this.expand);
      };

      AssignmentGroupListView.prototype.collapse = function(e, ui) {
        var id;
        id = ui.item.children(":first").data('id');
        ui.item.find("#assignment_group_" + id + "_assignments").slideUp(100);
        return ui.item.css("height", "auto");
      };

      AssignmentGroupListView.prototype.expand = function(e, ui) {
        var id;
        id = ui.item.children(":first").data('id');
        return ui.item.find("#assignment_group_" + id + "_assignments").slideDown(100);
      };

      return AssignmentGroupListView;

    })(SortableCollectionView);
  });

}).call(this);
