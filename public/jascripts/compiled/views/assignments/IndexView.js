// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['Backbone', 'jst/assignments/IndexView'], function(Backbone, template) {
    var IndexView;
    return IndexView = (function(_super) {

      __extends(IndexView, _super);

      function IndexView() {
        return IndexView.__super__.constructor.apply(this, arguments);
      }

      IndexView.prototype.template = template;

      IndexView.prototype.el = '#content';

      IndexView.child('assignmentGroupsView', '[data-view=assignmentGroups]');

      IndexView.child('inputFilterView', '[data-view=inputFilter]');

      IndexView.child('createGroupView', '[data-view=createGroup]');

      IndexView.child('assignmentSettingsView', '[data-view=assignmentSettings]');

      IndexView.child('showByView', '[data-view=showBy]');

      IndexView.prototype.els = {
        '#addGroup': '$addGroupButton',
        '#assignmentSettingsCog': '$assignmentSettingsButton'
      };

      IndexView.prototype.afterRender = function() {
        if (this.createGroupView) {
          this.createGroupView.hide();
          this.createGroupView.setTrigger(this.$addGroupButton);
        }
        if (this.assignmentSettingsView) {
          this.assignmentSettingsView.hide();
          return this.assignmentSettingsView.setTrigger(this.$assignmentSettingsButton);
        }
      };

      return IndexView;

    })(Backbone.View);
  });

}).call(this);
