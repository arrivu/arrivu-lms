// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['i18n!groups', 'underscore', 'compiled/views/DialogFormView', 'jst/groups/manage/groupEdit', 'jst/groups/manage/groupEditDialogWrapper'], function(I18n, _, DialogFormView, template, wrapper) {
    var GroupEditView;
    return GroupEditView = (function(_super) {

      __extends(GroupEditView, _super);

      function GroupEditView() {
        return GroupEditView.__super__.constructor.apply(this, arguments);
      }

      GroupEditView.prototype.defaults = {
        width: 550,
        title: I18n.t("edit_group", "Edit Group"),
        editing: true
      };

      GroupEditView.prototype.template = template;

      GroupEditView.prototype.wrapperTemplate = wrapper;

      GroupEditView.prototype.className = 'dialogFormView group-edit-dialog form-horizontal form-dialog';

      GroupEditView.prototype.events = _.extend({}, DialogFormView.prototype.events, {
        'click .dialog_closer': 'close'
      });

      GroupEditView.prototype.translations = {
        too_long: I18n.t("name_too_long", "Name is too long")
      };

      GroupEditView.prototype.initialize = function(options) {
        GroupEditView.__super__.initialize.apply(this, arguments);
        if (!this.options.editing) {
          return this.options.title = I18n.t("add_group", "Add Group");
        }
      };

      GroupEditView.prototype.openAgain = function() {
        GroupEditView.__super__.openAgain.apply(this, arguments);
        this.renderEl();
        return this.$el.find('input:first').focus();
      };

      return GroupEditView;

    })(DialogFormView);
  });

}).call(this);
