<?xml version="1.0" encoding="UTF-8"?>
<Settings><!--This file was automatically generated by Ruby plugin.
You are allowed to: 
1. Remove rake task
2. Add existing rake tasks
To add existing rake tasks automatically delete this file and reload the project.
--><RakeGroup description="" fullCmd="" taksId="rake"><RakeTask description="Builds mediaelementjs from it's git repo into a form canvas_lms can use with AMD" fullCmd="build_media_element_js" taksId="build_media_element_js" /><RakeGroup description="" fullCmd="" taksId="canvas"><RakeTask description="Check static assets and generate api documentation" fullCmd="canvas:check_static_assets" taksId="check_static_assets" /><RakeGroup description="" fullCmd="" taksId="check_syntax"><RakeTask description="Checks all js files for sytax errors" fullCmd="canvas:check_syntax:all" taksId="all" /><RakeTask description="Checks all js files that are staged for commiting to git for syntax errors" fullCmd="canvas:check_syntax:changed" taksId="changed" /></RakeGroup><RakeTask description="Compile javascript and css assets" fullCmd="canvas:compile_assets[generate_documentation]" taksId="compile_assets[generate_documentation]" /><RakeTask description="Compresses static assets" fullCmd="canvas:compress_assets" taksId="compress_assets" /><RakeTask description="" fullCmd="canvas:check_syntax" taksId="check_syntax" /><RakeTask description="" fullCmd="canvas:compile_assets" taksId="compile_assets" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="css"><RakeTask description="Compile css assets" fullCmd="css:generate" taksId="generate" /><RakeTask description="Generate styleguide" fullCmd="css:styleguide" taksId="styleguide" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="db"><RakeTask description="Raises an error if there are pending migrations" fullCmd="db:abort_if_pending_migrations" taksId="abort_if_pending_migrations" /><RakeTask description="Retrieves the charset for the current environment's database" fullCmd="db:charset" taksId="charset" /><RakeTask description="Retrieves the collation for the current environment's database" fullCmd="db:collation" taksId="collation" /><RakeTask description="Configure Default Account Name" fullCmd="db:configure_account_name" taksId="configure_account_name" /><RakeTask description="Create an administrator account" fullCmd="db:configure_admin" taksId="configure_admin" /><RakeTask description="Configure default settings" fullCmd="db:configure_default_settings" taksId="configure_default_settings" /><RakeTask description="Configure usage statistics collection" fullCmd="db:configure_statistics_collection" taksId="configure_statistics_collection" /><RakeTask description="Create the database defined in config/database.yml for the current RAILS_ENV" fullCmd="db:create" taksId="create" /><RakeGroup description="" fullCmd="" taksId="create"><RakeTask description="Create all the local databases defined in config/database.yml" fullCmd="db:create:all" taksId="all" /></RakeGroup><RakeTask description="Drops the database for the current RAILS_ENV" fullCmd="db:drop" taksId="drop" /><RakeGroup description="" fullCmd="" taksId="drop"><RakeTask description="Drops all the local databases defined in config/database.yml" fullCmd="db:drop:all" taksId="all" /></RakeGroup><RakeTask description="Make sure all scribd mime types are set up correctly" fullCmd="db:ensure_scribd_mime_types" taksId="ensure_scribd_mime_types" /><RakeTask description="Make sure all message templates have notifications in the db" fullCmd="db:evaluate_notification_templates" taksId="evaluate_notification_templates" /><RakeGroup description="" fullCmd="" taksId="fixtures"><RakeTask description="Search for a fixture given a LABEL or ID" fullCmd="db:fixtures:identify" taksId="identify" /><RakeTask description="Load fixtures into the current environment's database" fullCmd="db:fixtures:load" taksId="load" /></RakeGroup><RakeTask description="generate data" fullCmd="db:generate_data" taksId="generate_data" /><RakeTask description="Generate security.yml key" fullCmd="db:generate_security_key" taksId="generate_security_key" /><RakeTask description="Creates a database migration for any newly created/modified/deleted triggers in the models" fullCmd="db:generate_trigger_migration" taksId="generate_trigger_migration" /><RakeTask description="Useful initial setup task" fullCmd="db:initial_setup" taksId="initial_setup" /><RakeTask description="Load environment" fullCmd="db:load_environment" taksId="load_environment" /><RakeTask description="Create all the initial data, including notifications and admin account" fullCmd="db:load_initial_data" taksId="load_initial_data" /><RakeTask description="Find or create the notifications" fullCmd="db:load_notifications" taksId="load_notifications" /><RakeTask description="Migrate the database through scripts in db/migrate and update db/schema.rb by invoking db:schema:dump" fullCmd="db:migrate" taksId="migrate" /><RakeGroup description="" fullCmd="" taksId="migrate"><RakeTask description="Runs the &quot;down&quot; for a given migration VERSION" fullCmd="db:migrate:down" taksId="down" /><RakeTask description="Run all pending postdeploy migrations" fullCmd="db:migrate:postdeploy" taksId="postdeploy" /><RakeTask description="Run all pending predeploy migrations" fullCmd="db:migrate:predeploy" taksId="predeploy" /><RakeTask description="Rollbacks the database one migration and re migrate up" fullCmd="db:migrate:redo" taksId="redo" /><RakeTask description="Resets your database using your migrations for the current environment" fullCmd="db:migrate:reset" taksId="reset" /><RakeTask description="Runs the &quot;up&quot; for a given migration VERSION" fullCmd="db:migrate:up" taksId="up" /></RakeGroup><RakeTask description="migrate the page views in the database to cassandra" fullCmd="db:migrate_pageviews_to_cassandra[shard_id]" taksId="migrate_pageviews_to_cassandra[shard_id]" /><RakeTask description="execute migration_lint script" fullCmd="db:migration_lint" taksId="migration_lint" /><RakeTask description="Shows pending db migrations" fullCmd="db:pending_migrations" taksId="pending_migrations" /><RakeTask description="Drops and recreates the database from db/schema.rb for the current environment and loads the seeds" fullCmd="db:reset" taksId="reset" /><RakeTask description="Resets the encryption_key hash in the database" fullCmd="db:reset_encryption_key_hash" taksId="reset_encryption_key_hash" /><RakeTask description="Rolls the schema back to the previous version" fullCmd="db:rollback" taksId="rollback" /><RakeGroup description="" fullCmd="" taksId="schema"><RakeTask description="Create a db/schema.rb file that can be portably used against any DB supported by AR" fullCmd="db:schema:dump" taksId="dump" /><RakeTask description="Load a schema.rb file into the database" fullCmd="db:schema:load" taksId="load" /></RakeGroup><RakeTask description="Load the seed data from db/seeds.rb" fullCmd="db:seed" taksId="seed" /><RakeGroup description="" fullCmd="" taksId="sessions"><RakeTask description="Clear the sessions table" fullCmd="db:sessions:clear" taksId="clear" /><RakeTask description="Creates a sessions migration for use with ActiveRecord::SessionStore" fullCmd="db:sessions:create" taksId="create" /></RakeGroup><RakeTask description="Create the database, load the schema, and initialize with the seed data" fullCmd="db:setup" taksId="setup" /><RakeGroup description="" fullCmd="" taksId="structure"><RakeTask description="Dump the database structure to a SQL file" fullCmd="db:structure:dump" taksId="dump" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="Recreate the test database from the current environment's database schema" fullCmd="db:test:clone" taksId="clone" /><RakeTask description="Recreate the test databases from the development structure" fullCmd="db:test:clone_structure" taksId="clone_structure" /><RakeTask description="Recreate the test database from the current schema.rb" fullCmd="db:test:load" taksId="load" /><RakeTask description="Check for pending migrations and load the test schema" fullCmd="db:test:prepare" taksId="prepare" /><RakeTask description="Empty the test database" fullCmd="db:test:purge" taksId="purge" /><RakeTask description="Drop and regenerate the test db by running migrations" fullCmd="db:test:reset" taksId="reset" /></RakeGroup><RakeTask description="Retrieves the current schema version number" fullCmd="db:version" taksId="version" /><RakeTask description="" fullCmd="db:load_config" taksId="load_config" /><RakeTask description="" fullCmd="db:migrate_pageviews_to_cassandra" taksId="migrate_pageviews_to_cassandra" /><RakeTask description="" fullCmd="db:nuke" taksId="nuke" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="doc"><RakeTask description="Generate YARD Documentation" fullCmd="doc:api" taksId="api" /><RakeTask description="Build RDoc HTML files" fullCmd="doc:app" taksId="app" /><RakeTask description="Remove RDoc HTML files" fullCmd="doc:clobber_app" taksId="clobber_app" /><RakeTask description="Remove plugin documentation" fullCmd="doc:clobber_plugins" taksId="clobber_plugins" /><RakeTask description="Remove RDoc HTML files" fullCmd="doc:clobber_rails" taksId="clobber_rails" /><RakeTask description="Generate Rails guides" fullCmd="doc:guides" taksId="guides" /><RakeTask description="Generate documentation for all installed plugins" fullCmd="doc:plugins" taksId="plugins" /><RakeGroup description="" fullCmd="" taksId="plugins"><RakeTask description="Generate documentation for the academic_benchmark plugin" fullCmd="doc:plugins:academic_benchmark" taksId="academic_benchmark" /><RakeTask description="Generate documentation for the account_reports plugin" fullCmd="doc:plugins:account_reports" taksId="account_reports" /><RakeTask description="Generate documentation for the acts_as_list plugin" fullCmd="doc:plugins:acts_as_list" taksId="acts_as_list" /><RakeTask description="Generate documentation for the adheres_to_policy plugin" fullCmd="doc:plugins:adheres_to_policy" taksId="adheres_to_policy" /><RakeTask description="Generate documentation for the attachment_fu plugin" fullCmd="doc:plugins:attachment_fu" taksId="attachment_fu" /><RakeTask description="Generate documentation for the attachment_fu_regenerate_thumbnails plugin" fullCmd="doc:plugins:attachment_fu_regenerate_thumbnails" taksId="attachment_fu_regenerate_thumbnails" /><RakeTask description="Generate documentation for the breach_migration plugin" fullCmd="doc:plugins:breach_migration" taksId="breach_migration" /><RakeTask description="Generate documentation for the broadcast_policy plugin" fullCmd="doc:plugins:broadcast_policy" taksId="broadcast_policy" /><RakeTask description="Generate documentation for the crummy plugin" fullCmd="doc:plugins:crummy" taksId="crummy" /><RakeTask description="Generate documentation for the delayed_job plugin" fullCmd="doc:plugins:delayed_job" taksId="delayed_job" /><RakeTask description="Generate documentation for the mimetype_fu plugin" fullCmd="doc:plugins:mimetype_fu" taksId="mimetype_fu" /><RakeTask description="Generate documentation for the moodle2cc plugin" fullCmd="doc:plugins:moodle2cc" taksId="moodle2cc" /><RakeTask description="Generate documentation for the qti_exporter plugin" fullCmd="doc:plugins:qti_exporter" taksId="qti_exporter" /><RakeTask description="Generate documentation for the rails_xss plugin" fullCmd="doc:plugins:rails_xss" taksId="rails_xss" /><RakeTask description="Generate documentation for the registration_captcha plugin" fullCmd="doc:plugins:registration_captcha" taksId="registration_captcha" /><RakeTask description="Generate documentation for the respondus_soap_endpoint plugin" fullCmd="doc:plugins:respondus_soap_endpoint" taksId="respondus_soap_endpoint" /><RakeTask description="Generate documentation for the sanitize_field plugin" fullCmd="doc:plugins:sanitize_field" taksId="sanitize_field" /><RakeTask description="Generate documentation for the simply_versioned plugin" fullCmd="doc:plugins:simply_versioned" taksId="simply_versioned" /><RakeTask description="Generate documentation for the stringex plugin" fullCmd="doc:plugins:stringex" taksId="stringex" /><RakeTask description="Generate documentation for the wiziq plugin" fullCmd="doc:plugins:wiziq" taksId="wiziq" /></RakeGroup><RakeTask description="Build RDoc HTML files" fullCmd="doc:rails" taksId="rails" /><RakeTask description="Rebuild RDoc HTML files" fullCmd="doc:reapp" taksId="reapp" /><RakeTask description="Rebuild RDoc HTML files" fullCmd="doc:rerails" taksId="rerails" /><RakeTask description="" fullCmd="doc:clobber" taksId="clobber" /></RakeGroup><RakeTask description="List the gems that this rails application depends on" fullCmd="gems" taksId="gems" /><RakeGroup description="" fullCmd="" taksId="gems"><RakeTask description="Build any native extensions for unpacked gems" fullCmd="gems:build" taksId="build" /><RakeGroup description="" fullCmd="" taksId="build"><RakeTask description="Force the build of all gems" fullCmd="gems:build:force" taksId="force" /></RakeGroup><RakeTask description="Installs all required gems" fullCmd="gems:install" taksId="install" /><RakeTask description="Regenerate gem specifications in correct format" fullCmd="gems:refresh_specs" taksId="refresh_specs" /><RakeTask description="Unpacks all required gems into vendor/gems" fullCmd="gems:unpack" taksId="unpack" /><RakeGroup description="" fullCmd="" taksId="unpack"><RakeTask description="Unpacks all required gems and their dependencies into vendor/gems" fullCmd="gems:unpack:dependencies" taksId="dependencies" /></RakeGroup><RakeTask description="" fullCmd="gems:base" taksId="base" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="i18n"><RakeTask description="Imports new translations, ignores missing or unexpected keys" fullCmd="i18n:autoimport[translated_file,source_file]" taksId="autoimport[translated_file,source_file]" /><RakeTask description="Verifies all translation calls" fullCmd="i18n:check" taksId="check" /><RakeTask description="Exports new/changed English strings to be translated" fullCmd="i18n:export" taksId="export" /><RakeTask description="Generates a new en.yml file for all translations" fullCmd="i18n:generate" taksId="generate" /><RakeTask description="Generates JS bundle i18n files (non-en) and adds them to assets.yml" fullCmd="i18n:generate_js" taksId="generate_js" /><RakeTask description="Generate the pseudo-translation file lolz" fullCmd="i18n:generate_lolz" taksId="generate_lolz" /><RakeTask description="Validates and imports new translations" fullCmd="i18n:import[source_file,translated_file]" taksId="import[source_file,translated_file]" /><RakeTask description="Download language files from Transifex" fullCmd="i18n:transifex[user,password,languages]" taksId="transifex[user,password,languages]" /><RakeTask description="Download language files from Transifex and import them" fullCmd="i18n:transifeximport[user,password,languages,source_file]" taksId="transifeximport[user,password,languages,source_file]" /><RakeTask description="" fullCmd="i18n:autoimport" taksId="autoimport" /><RakeTask description="" fullCmd="i18n:import" taksId="import" /><RakeTask description="" fullCmd="i18n:transifex" taksId="transifex" /><RakeTask description="" fullCmd="i18n:transifeximport" taksId="transifeximport" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="js"><RakeTask description="optimize and build js for production" fullCmd="js:build" taksId="build" /><RakeTask description="creates ember app bundles" fullCmd="js:bundle_ember_apps" taksId="bundle_ember_apps" /><RakeTask description="generates compiled coffeescript, handlebars templates and plugin extensions" fullCmd="js:generate" taksId="generate" /><RakeTask description="generates plugin extension modules" fullCmd="js:generate_extensions" taksId="generate_extensions" /><RakeTask description="generate QUnit runner file @ spec/javascripts/runner.html" fullCmd="js:generate_runner" taksId="generate_runner" /><RakeTask description="test javascript specs with PhantomJS" fullCmd="js:test" taksId="test" /><RakeTask description="" fullCmd="js:dev" taksId="dev" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="jst"><RakeTask description="precompile handlebars templates from app/views/jst to public/javascripts/jst" fullCmd="jst:compile" taksId="compile" /><RakeTask description="precompile ember templates" fullCmd="jst:ember" taksId="ember" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="log"><RakeTask description="Truncates all *.log files in log/ to zero bytes" fullCmd="log:clear" taksId="clear" /></RakeGroup><RakeTask description="Prints out your Rack middleware stack" fullCmd="middleware" taksId="middleware" /><RakeTask description="Enumerate all annotations" fullCmd="notes" taksId="notes" /><RakeGroup description="" fullCmd="" taksId="notes"><RakeTask description="Enumerate a custom annotation, specify with ANNOTATION=WTFHAX" fullCmd="notes:custom" taksId="custom" /><RakeTask description="Enumerate all FIXME annotations" fullCmd="notes:fixme" taksId="fixme" /><RakeTask description="Enumerate all OPTIMIZE annotations" fullCmd="notes:optimize" taksId="optimize" /><RakeTask description="Enumerate all TODO annotations" fullCmd="notes:todo" taksId="todo" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="parallel"><RakeTask description="create test databases via db:create --&gt; parallel:create[num_cpus]" fullCmd="parallel:create[count]" taksId="create[count]" /><RakeTask description="drop test databases via db:drop --&gt; parallel:drop[num_cpus]" fullCmd="parallel:drop[count]" taksId="drop[count]" /><RakeTask description="update test databases by dumping and loading --&gt; parallel:dump_load[num_cpus]" fullCmd="parallel:dump_load[count]" taksId="dump_load[count]" /><RakeTask description="load dumped schema for test databases via db:schema:load --&gt; parallel:load_schema[num_cpus]" fullCmd="parallel:load_schema[count]" taksId="load_schema[count]" /><RakeTask description="update test databases via db:migrate --&gt; parallel:migrate[num_cpus]" fullCmd="parallel:migrate[count]" taksId="migrate[count]" /><RakeTask description="run tasks in parallel" fullCmd="parallel:optional_task[count,task_name]" taksId="optional_task[count,task_name]" /><RakeTask description="drop, create, migrate all in one --&gt; parallel:prepare[num_cpus]" fullCmd="parallel:prepare[count]" taksId="prepare[count]" /><RakeTask description="run spec in parallel with parallel:spec[num_cpus]" fullCmd="parallel:spec[count,pattern,options,arguments]" taksId="spec[count,pattern,options,arguments]" /><RakeTask description="" fullCmd="parallel:create" taksId="create" /><RakeTask description="" fullCmd="parallel:drop" taksId="drop" /><RakeTask description="" fullCmd="parallel:dump_load" taksId="dump_load" /><RakeTask description="" fullCmd="parallel:load_schema" taksId="load_schema" /><RakeTask description="" fullCmd="parallel:migrate" taksId="migrate" /><RakeTask description="" fullCmd="parallel:nonselenium" taksId="nonselenium" /><RakeTask description="" fullCmd="parallel:nonseleniumparallel" taksId="nonseleniumparallel" /><RakeTask description="" fullCmd="parallel:optional_task" taksId="optional_task" /><RakeTask description="" fullCmd="parallel:pattern" taksId="pattern" /><RakeTask description="" fullCmd="parallel:prepare" taksId="prepare" /><RakeTask description="" fullCmd="parallel:selenium" taksId="selenium" /><RakeTask description="" fullCmd="parallel:spec" taksId="spec" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="rails"><RakeGroup description="" fullCmd="" taksId="freeze"><RakeTask description="Lock to latest Edge Rails, for a specific release use RELEASE=1.2.0" fullCmd="rails:freeze:edge" taksId="edge" /><RakeTask description="Lock this application to the current gems (by unpacking them into vendor/rails)" fullCmd="rails:freeze:gems" taksId="gems" /></RakeGroup><RakeTask description="Applies the template supplied by LOCATION=/path/to/template" fullCmd="rails:template" taksId="template" /><RakeTask description="Unlock this application from freeze of gems or edge and return to a fluid use of system gems" fullCmd="rails:unfreeze" taksId="unfreeze" /><RakeTask description="Update both configs, scripts and public/javascripts from Rails" fullCmd="rails:update" taksId="update" /><RakeGroup description="" fullCmd="" taksId="update"><RakeTask description="Rename application.rb to application_controller.rb" fullCmd="rails:update:application_controller" taksId="application_controller" /><RakeTask description="Update config/boot.rb from your current rails install" fullCmd="rails:update:configs" taksId="configs" /><RakeTask description="Generate dispatcher files in RAILS_ROOT/public" fullCmd="rails:update:generate_dispatchers" taksId="generate_dispatchers" /><RakeTask description="Update your javascripts from your current rails install" fullCmd="rails:update:javascripts" taksId="javascripts" /><RakeTask description="Add new scripts to the application script/ directory" fullCmd="rails:update:scripts" taksId="scripts" /></RakeGroup></RakeGroup><RakeTask description="Removes the schema line in fixtures, models, and specs" fullCmd="remove_schema_signature" taksId="remove_schema_signature" /><RakeTask description="Print out all defined routes in match order, with names" fullCmd="routes" taksId="routes" /><RakeTask description="Generate a crytographically secure secret key" fullCmd="secret" taksId="secret" /><RakeTask description="Run all specs in spec directory (excluding plugin specs)" fullCmd="spec" taksId="spec" /><RakeGroup description="" fullCmd="" taksId="spec"><RakeTask description="Run the code examples in spec/controllers" fullCmd="spec:controllers" taksId="controllers" /><RakeTask description="Run the code examples in vendor/plugins (except RSpec's own)" fullCmd="spec:coverage" taksId="coverage" /><RakeGroup description="" fullCmd="" taksId="db"><RakeGroup description="" fullCmd="" taksId="fixtures"><RakeTask description="Load fixtures (from spec/fixtures) into the current environment's database" fullCmd="spec:db:fixtures:load" taksId="load" /></RakeGroup></RakeGroup><RakeTask description="Print Specdoc for all specs (excluding plugin specs)" fullCmd="spec:doc" taksId="doc" /><RakeTask description="Run the code examples in spec/helpers" fullCmd="spec:helpers" taksId="helpers" /><RakeTask description="Run the code examples in spec/lib" fullCmd="spec:lib" taksId="lib" /><RakeTask description="Run the code examples in spec/models" fullCmd="spec:models" taksId="models" /><RakeTask description="Print Specdoc for all plugin examples" fullCmd="spec:plugin_doc" taksId="plugin_doc" /><RakeGroup description="" fullCmd="" taksId="plugins"><RakeTask description="Runs the examples for rspec_on_rails" fullCmd="spec:plugins:rspec_on_rails" taksId="rspec_on_rails" /></RakeGroup><RakeTask description="Run the code examples in spec/selenium" fullCmd="spec:selenium" taksId="selenium" /><RakeGroup description="" fullCmd="" taksId="server"><RakeTask description="restart spec_server" fullCmd="spec:server:restart" taksId="restart" /><RakeTask description="start spec_server" fullCmd="spec:server:start" taksId="start" /><RakeTask description="check if spec server is running" fullCmd="spec:server:status" taksId="status" /><RakeTask description="stop spec_server" fullCmd="spec:server:stop" taksId="stop" /></RakeGroup><RakeTask description="Run non-selenium files in a single thread" fullCmd="spec:single" taksId="single" /><RakeTask description="Run the code examples in spec/views" fullCmd="spec:views" taksId="views" /><RakeTask description="Run all specs in spec directory, wiping the database first" fullCmd="spec:wipedb" taksId="wipedb" /><RakeTask description="" fullCmd="spec:statsetup" taksId="statsetup" /></RakeGroup><RakeTask description="Report code statistics (KLOCs, etc) from the application" fullCmd="stats" taksId="stats" /><RakeTask description="Run all unit, functional and integration tests" fullCmd="test" taksId="test" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="Run tests for {:benchmark=&gt;&quot;db:test:prepare&quot;} / Benchmark the performance tests" fullCmd="test:benchmark" taksId="benchmark" /><RakeTask description="Run tests for {:functionals=&gt;&quot;db:test:prepare&quot;} / Run the functional tests in test/functional" fullCmd="test:functionals" taksId="functionals" /><RakeTask description="Run tests for {:integration=&gt;&quot;db:test:prepare&quot;} / Run the integration tests in test/integration" fullCmd="test:integration" taksId="integration" /><RakeTask description="Run tests for {:plugins=&gt;:environment} / Run the plugin tests in vendor/plugins/*/**/test (or specify with PLUGIN=name)" fullCmd="test:plugins" taksId="plugins" /><RakeTask description="Run tests for {:profile=&gt;&quot;db:test:prepare&quot;} / Profile the performance tests" fullCmd="test:profile" taksId="profile" /><RakeTask description="Run tests for {:recent=&gt;&quot;db:test:prepare&quot;} / Test recent changes" fullCmd="test:recent" taksId="recent" /><RakeTask description="Run tests for {:uncommitted=&gt;&quot;db:test:prepare&quot;} / Test changes since last checkin (only Subversion and Git)" fullCmd="test:uncommitted" taksId="uncommitted" /><RakeTask description="Run tests for {:units=&gt;&quot;db:test:prepare&quot;} / Run the unit tests in test/unit" fullCmd="test:units" taksId="units" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="time"><RakeGroup description="" fullCmd="" taksId="zones"><RakeTask description="Displays names of all time zones recognized by the Rails TimeZone class, grouped by offset" fullCmd="time:zones:all" taksId="all" /><RakeTask description="Displays names of time zones recognized by the Rails TimeZone class with the same offset as the system local time" fullCmd="time:zones:local" taksId="local" /><RakeTask description="Displays names of US time zones recognized by the Rails TimeZone class, grouped by offset" fullCmd="time:zones:us" taksId="us" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="tmp"><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="Clears all files and directories in tmp/cache" fullCmd="tmp:cache:clear" taksId="clear" /></RakeGroup><RakeTask description="Clear session, cache, and socket files from tmp/" fullCmd="tmp:clear" taksId="clear" /><RakeTask description="Creates tmp directories for sessions, cache, sockets, and pids" fullCmd="tmp:create" taksId="create" /><RakeGroup description="" fullCmd="" taksId="pids"><RakeTask description="Clears all files in tmp/pids" fullCmd="tmp:pids:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sessions"><RakeTask description="Clears all files in tmp/sessions" fullCmd="tmp:sessions:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sockets"><RakeTask description="Clears all files in tmp/sockets" fullCmd="tmp:sockets:clear" taksId="clear" /></RakeGroup></RakeGroup><RakeTask description="" fullCmd="default" taksId="default" /><RakeTask description="" fullCmd="doc" taksId="doc" /><RakeTask description="" fullCmd="doc/api" taksId="doc/api" /><RakeTask description="" fullCmd="doc/api/index.html" taksId="doc/api/index.html" /><RakeTask description="" fullCmd="doc/app" taksId="doc/app" /><RakeTask description="" fullCmd="doc/app/index.html" taksId="doc/app/index.html" /><RakeTask description="" fullCmd="environment" taksId="environment" /><RakeTask description="" fullCmd="rails_env" taksId="rails_env" /><RakeTask description="" fullCmd="remove_schema_sig" taksId="remove_schema_sig" /></RakeGroup></Settings>
